---
import '../styles/base.css'
import Technologies from "./Technologies.astro";
import {
	IconSun,
	IconHoopdex,
	IconUser,
	IconBlog,
	IconHome,
	IconUnlock,
	IconPreview,
} from "../components/icons";
import RoundIconButton from "./RoundIconButton.astro";
import SquareIconLink from "./SquareIconLink.astro";

export interface Props {
	title: string;
}

const { title } = Astro.props as Props;

---

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/x-icon" href="/favicon.ico" />
		<title>{title}</title>
	</head>

	<body
	 class="flex flex-col items-center justify-center relative box-border min-h-screen bg-light-primary dark:bg-gradient-main-dark">
		<Technologies />
		<main
			class="flex flex-col p-1 m-1 md:p-3 md:my-10 md:mx-12 lg:my-0 w-fit lg:w-[calc(100vw_-_9%)] rounded-tr-2xl rounded-tl-lg rounded-b-lg justify-between"
		>
			<div class="flex w-full relative mb-2 md:mb-4">
				<div class="flex w-15 -top-5 sm:top-0 sm:w-fit absolute">
					<a href="/" target="_self" title="Go to the target page" class="flex w-15 -top-5 sm:top-0 sm:w-fit absolute">
						<IconHoopdex/>
					  </a>
				</div>
				<div
					class="flex items-center text-right ml-auto text-xl w-fit text-light-blue-dark dark:text-dark-blue-light"
				>
				<h1 class="font-black leading-extra-loose md:text-4xl 2xl:text-5xl">
				  </h1>
				  
				</div>

				<div
					class="flex w-fit h-fit px-1 py-0 ml-4 2xl:ml-8 shadow-switcher rounded-2xl dark:bg-buttons-box-dark dark:shadow-box-dark-out"
				>
					<div
						class="dark:shadow-buttons-box-dark rounded-2xl w-min flex sm:w-full px-1.5 py-1.5 md:px-3 md:py-3 h-fit"
					>

					<SquareIconLink
					title="Unlock Full Dex"
					href="https://www.patreon.com/Hoopdex"
					target="_blank"
					>

 					<div class="text">
					<div class="icon">
    <p>Unlock Full Dex</p>
    <IconUnlock/>
 					</div>
					</div>

					<SquareIconLink
					title="Preview Dex"
					target="_self"
					href="/postlist"
					>

					<div class="text">
						<div class="icon">
		<p>Preview Dex</p>
		<IconPreview/>
						 </div>
						</div>	
						
						<SquareIconLink
						title="About Us"
						target="_self"
						href="/aboutme"
						>
	
						<div class="text">
							<div class="icon">
			<p>About Us</p>
			<IconUser/>
							 </div>
							</div>	

				</SquareIconLink>

				<span class="mr-4"></span>

			 		<button type="button" onclick="window.toggleTheme()" class="text-light-blue-light hover:text-light-blue-dark dark:text-gray-400 bg-light-secondary shadow-button-flat-nopressed hover:border-2 hover:shadow-button-flat-pressed focus:opacity-100 focus:outline-none active:border-2 active:shadow-button-flat-pressed font-medium rounded-md text-sm p-2.5 text-center inline-flex items-center mr-4 last-of-type:mr-0 border-2 border-transparent dark:bg-button-curved-default-dark dark:shadow-button-curved-default-dark dark:hover:bg-button-curved-pressed-dark dark:hover:shadow-button-curved-pressed-dark dark:focus:bg-button-curved-pressed-dark dark:focus:shadow-button-curved-pressed-dark dark:border-0">
						<svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5" width="24" height="24" viewBox="0 0 24 24" stroke-width="1.75" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
						<path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
						<circle cx="12" cy="12" r="4"></circle>
						<path d="M3 12h1m8 -9v1m8 8h1m-9 8v1m-6.4 -15.4l.7 .7m12.1 -.7l-.7 .7m0 11.4l.7 .7m-12.1 -.7l-.7 .7"></path>
					  </svg>
						<span class="sr-only"> Theme color switcher</span>
					  </button>
					  
						<RoundIconButton
							title="Light/Dark Mode"
							srOnly="Theme color switcher"
							type="button"
							onclick="window.toggleTheme()"
						>
						</RoundIconButton>
									
					</div>
				</div>
			</div>
			<slot />
			</div>

		</main>

		<script is:inline>
			const toggleTheme = () => {
				document.documentElement.classList.toggle("dark");
				localStorage.theme = document.documentElement.classList.contains("dark")
					? "dark"
					: "light";
			};

			window.toggleTheme = toggleTheme;

			if (localStorage.theme === "dark") {
				document.documentElement.classList.add("dark");
			} else {
				document.documentElement.classList.remove("dark");
			}
		</script>
	</body>
</html>
